[app:kapp]
# flask app, configuration here is stored in app.config
use = call:kapp:app_factory
DEBUG = true


[filter:authtoken]
# keystonemiddleware configuration
# http://docs.openstack.org/developer/keystonemiddleware/middlewarearchitecture.html
use = call:keystonemiddleware.auth_token:filter_factory


[pipeline:main]
pipeline = authtoken kapp


[server:waitress]
use = call:kapp:server_factory
port = 8020
host = 0.0.0.0


[server:werkzeug_simple]
use = call:kapp:server_factory_dbg
host = 0.0.0.0
port = 8020

# should the server automatically restart the python 
# process if modules were changed?
use_reloader = false

# the type of reloader to use. The default is auto detection. 
# Valid values are 'stat' and 'watchdog'. 
# See Reloader for more information.
#reloader_type = auto

# the interval for the reloader in seconds.
#reloader_interval = 1

# should the werkzeug debugging system be used?
use_debugger = true

# should the exception evaluation feature be enabled?
#use_evalex = false

# should the process handle each request in a separate thread?
threaded = true

# if greater than 1 then handle each request in 
# a new process up to this maximum number of concurrent processes.
#processes = 1

# set this to True to disable the error catching. 
# This means that the server will die on errors 
# but it can be useful to hook debuggers in (pdb etc.)
#passthrough_errors = false





###############################
# custom options
#   If there is any bussiness related options,
#   put them here.
#   Remeber to register them before using.
###############################
[kapp]


###############################
# service target info
###############################
[policy_target]
target_role = admin

# v3 target info
target_project_name = admin
#target_project_id = ''
#target_project_domain_name = ''
target_project_domain_id = default

# # v2 target info
# target_tenant_name = service
# target_tenant_id = ''

#enabled = true
enabled = false







########################################################
# configuration sections for openstack components
#   sections below are parsed by oslo_config
########################################################

[keystone_authtoken]
#
# From keystonemiddleware.auth_token
#

# Complete "public" Identity API endpoint. This endpoint should not be an
# "admin" endpoint, as it should be accessible by all end users.
# Unauthenticated clients are redirected to this endpoint to authenticate.
# Although this endpoint should  ideally be unversioned, client support in the
# wild varies.  If you're using a versioned v2 endpoint here, then this  should
# *not* be the same endpoint the service user utilizes  for validating tokens,
# because normal end users may not be  able to reach that endpoint. (string
# value)
#auth_uri = <None>
auth_uri = http://192.168.31.200:5000

# v3 config
auth_type = password
project_name = admin
project_domain_id = default
username = admin
password = 111111
user_domain_id = default
# bug?: http://localhost:35357 is used, no matter what url it is.
auth_url = http://192.168.31.200:35357/v3

# # v2 config
# auth_host = 192.168.111.233
# auth_port = 35357
# auth_protocol = http
# admin_user = admin
# admin_password = ADMIN_PASS
# admin_tenant_name = admin

# API version of the admin Identity API endpoint. (string value)
# <None>: auto-detected
#auth_version = <None>

# Do not handle authorization requests within the middleware, but delegate the
# authorization decision to downstream WSGI components. (boolean value)
#delay_auth_decision = false
delay_auth_decision = true

# Request timeout value for communicating with Identity API server. (integer
# value)
#http_connect_timeout = <None>

# How many times are we trying to reconnect when communicating with Identity
# API Server. (integer value)
#http_request_max_retries = 3

# Request environment key where the Swift cache object is stored. When
# auth_token middleware is deployed with a Swift cache, use this option to have
# the middleware share a caching backend with swift. Otherwise, use the
# ``memcached_servers`` option instead. (string value)
#cache = <None>

# Required if identity server requires client certificate (string value)
#certfile = <None>

# Required if identity server requires client certificate (string value)
#keyfile = <None>

# A PEM encoded Certificate Authority to use when verifying HTTPs connections.
# Defaults to system CAs. (string value)
#cafile = <None>

# Verify HTTPS connections. (boolean value)
#insecure = false
insecure = true

# The region in which the identity server can be found. (string value)
#region_name = <None>

# Directory used to cache files related to PKI tokens. (string value)
#signing_dir = <None>

# Optionally specify a list of memcached server(s) to use for caching. If left
# undefined, tokens will instead be cached in-process. (list value)
# Deprecated group/name - [keystone_authtoken]/memcache_servers
#memcached_servers = <None>

# In order to prevent excessive effort spent validating tokens, the middleware
# caches previously-seen tokens for a configurable duration (in seconds). Set
# to -1 to disable caching completely. (integer value)
#token_cache_time = 300

# Determines the frequency at which the list of revoked tokens is retrieved
# from the Identity service (in seconds). A high number of revocation events
# combined with a low cache duration may significantly reduce performance. Only
# valid for PKI tokens. (integer value)
#revocation_cache_time = 10

# (Optional) If defined, indicate whether token data should be authenticated or
# authenticated and encrypted. If MAC, token data is authenticated (with HMAC)
# in the cache. If ENCRYPT, token data is encrypted and authenticated in the
# cache. If the value is not one of these options or empty, auth_token will
# raise an exception on initialization. (string value)
# Allowed values: None, MAC, ENCRYPT
#memcache_security_strategy = None

# (Optional, mandatory if memcache_security_strategy is defined) This string is
# used for key derivation. (string value)
#memcache_secret_key = <None>

# (Optional) Number of seconds memcached server is considered dead before it is
# tried again. (integer value)
#memcache_pool_dead_retry = 300

# (Optional) Maximum total number of open connections to every memcached
# server. (integer value)
#memcache_pool_maxsize = 10

# (Optional) Socket timeout in seconds for communicating with a memcached
# server. (integer value)
#memcache_pool_socket_timeout = 3

# (Optional) Number of seconds a connection to memcached is held unused in the
# pool before it is closed. (integer value)
#memcache_pool_unused_timeout = 60

# (Optional) Number of seconds that an operation will wait to get a memcached
# client connection from the pool. (integer value)
#memcache_pool_conn_get_timeout = 10

# (Optional) Use the advanced (eventlet safe) memcached client pool. The
# advanced pool will only work under python 2.x. (boolean value)
#memcache_use_advanced_pool = false

# (Optional) Indicate whether to set the X-Service-Catalog header. If False,
# middleware will not ask for service catalog on token validation and will not
# set the X-Service-Catalog header. (boolean value)
#include_service_catalog = true
include_service_catalog = false

# Used to control the use and type of token binding. Can be set to: "disabled"
# to not check token binding. "permissive" (default) to validate binding
# information if the bind type is of a form known to the server and ignore it
# if not. "strict" like "permissive" but if the bind type is unknown the token
# will be rejected. "required" any form of token binding is needed to be
# allowed. Finally the name of a binding method that must be present in tokens.
# (string value)
#enforce_token_bind = permissive

# If true, the revocation list will be checked for cached tokens. This requires
# that PKI tokens are configured on the identity server. (boolean value)
#check_revocations_for_cached = false

# Hash algorithms to use for hashing PKI tokens. This may be a single algorithm
# or multiple. The algorithms are those supported by Python standard
# hashlib.new(). The hashes will be tried in the order given, so put the
# preferred one first for performance. The result of the first hash will be
# stored in the cache. This will typically be set to multiple values only while
# migrating from a less secure algorithm to a more secure one. Once all the old
# tokens are expired this option should be set to a single value for better
# performance. (list value)
#hash_algorithms = md5

# Authentication type to load (string value)
# Deprecated group/name - [keystone_authtoken]/auth_plugin
#auth_type = <None>

# Config Section from which to load plugin specific options (string value)
#auth_section = <None>


[oslo_policy]
#
# From oslo.policy
#

# The JSON file that defines policies. (string value)
# Deprecated group/name - [DEFAULT]/policy_file
#policy_file = policy.json

# Default rule. Enforced when a requested rule is not found. (string value)
# Deprecated group/name - [DEFAULT]/policy_default_rule
#policy_default_rule = default

# Directories where policy configuration files are stored. They can be relative
# to any directory in the search path defined by the config_dir option, or
# absolute paths. The file defined by policy_file must exist for these
# directories to be searched.  Missing or empty directories are ignored. (multi
# valued)
# Deprecated group/name - [DEFAULT]/policy_dirs
#policy_dirs = policy.d


